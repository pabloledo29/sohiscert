<?php
/**
 * Copyright (c) 2016.
 * Desarrollado por Atlantic International Technology para Sohiscert
 */

namespace App\Repository;

use \Doctrine\ORM\NoResultException;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Common\Persistence\ManagerRegistry;
use App\Entity\Client;

/**
 * ClientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClientRepository extends ServiceEntityRepository
{

    public function __construct(ManagerRegistry $registry)
    {
       
        parent::__construct($registry,Client::class);
    }
    /**
     * Function that compares all atributes of two instances of and Object to determine when to update the oldest one.
     * @param Client $clientxml
     * @param Client $clientddbb
     * @return bool
     */
    public function compareEntities(Client $clientxml, Client $clientddbb)
    {
        $res = false;

        if ($clientxml->getClDeno() != $clientddbb->getClDeno()) {
            $res = true;
        }
        if ($clientxml->getClCif() != $clientddbb->getClCif()) {
            $res = true;
        }
        if ($clientxml->getClCdp() != $clientddbb->getClCdp()) {
            $res = true;
        }
        if ($clientxml->getClDom() != $clientddbb->getClDom()) {
            $res = true;
        }
        if ($clientxml->getClProv() != $clientddbb->getClProv()) {
            $res = true;
        }
        if ($clientxml->getClPob() != $clientddbb->getClPob()) {
            $res = true;
        }
        if ($clientxml->getClPais() != $clientddbb->getClPais()) {
            $res = true;
        }
        if ($clientxml->getClTel() != $clientddbb->getClTel()) {
            $res = true;
        }
        if ($clientxml->getClFax() != $clientddbb->getClFax()) {
            $res = true;
        }
        if ($clientxml->getClEma() != $clientddbb->getClEma()) {
            $res = true;
        }
        if ($clientxml->getClActi() != $clientddbb->getClActi()) {
            $res = true;
        }

        return $res;
    }

    /**
     * Localiza todas las ocurrencias de un cliente con un mismos CIF.
     *
     * @param $cif
     * @return array
     */
    public function findClients($cif)
    {
        $query = $this->getDoctrine()->getManager()
            ->createQuery(
                'SELECT c.codigo
                FROM AppBundle:Client c
                WHERE c.clCif = :cif
                ORDER BY c.id DESC'
            )->setParameter('cif', $cif);
        try {
            return $query->getResult();
        } catch (NoResultException $e) {
            return array();
        }
    }
}
